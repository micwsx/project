<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.enjoy.dao.TRole">

 	<resultMap type="Role" id="record">
		<id column="id" property="id" javaType="java.lang.Integer"/>
		<result column="name" property="name" javaType="java.lang.String"/>
<!-- 		<collection property="users" ofType="User" columnPrefix="post_">
			<id column="id" property="id" javaType="java.lang.Integer" />
			<result column="userName" property="userName" javaType="java.lang.String"/>
			<result column="sex" property="sex" javaType="java.lang.Boolean"/>
			<result column="remark" property="remark" javaType="java.lang.String"/>
		</collection> -->
	</resultMap>
 
 	<!-- role:user(1:N) -->
 	<resultMap type="Role" id="resultMapOneToMany" extends="record">
 		<!-- <collection property="users" ofType="User" column="post_id" select="com.spring.persistance.dao.TUser.selectById"/> -->
		<collection property="users" ofType="User" columnPrefix="post_">
 			<id column="id" property="id" javaType="java.lang.Integer"/>
 			<result column="userName" property="userName" javaType="java.lang.String"/>
			<result column="sex" property="sex" javaType="java.lang.Boolean"/>
			<result column="remark" property="remark" javaType="java.lang.String"/>
 		</collection> 
 	</resultMap>
 
 
 	<select id="selectById" resultMap="resultMapOneToMany">
		SELECT role.id, role.name,
			   user.id as post_id, user.userName as post_userName, user.sex as post_sex, user.remark as post_remark
		FROM role 
		LEFT JOIN userrole ON role.id=userrole.roleId
		LEFT JOIN user ON user.id=userrole.userId
		WHERE role.id=#{id}
	</select>
	
	
	<select id="selectAll" resultMap="resultMapOneToMany">
		SELECT role.id, role.name,
			   user.id as post_id, user.userName as post_userName, user.sex as post_sex, user.remark as post_remark
		FROM role 
		LEFT JOIN userrole ON role.id=userrole.roleId
		LEFT JOIN user ON user.id=userrole.userId;
	</select>

	<select id="selectCriteria" resultMap="resultMapOneToMany">
		SELECT role.id, role.name,
			   user.id as post_id, user.userName as post_userName, user.sex as post_sex, user.remark as post_remark
		FROM role 
		LEFT JOIN userrole ON role.id=userrole.roleId
		LEFT JOIN user ON user.id=userrole.userId
		<where>
			<if test="id !=null">
				and id=#{id}
			</if>
			<if test="name !=null">
				and name=#{name}
			</if>
		</where>
	</select>
	
	
	
	<insert id="add" parameterType="User" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO role(id, name)
		VALUES(#{id},#{name})
	</insert>
	
	<insert id="addBatch" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO role(id, name)
		VALUES
		<foreach collection="list" index="0" separator="," item="role" >
			(#{role.id},#{role.name})
		</foreach>
	</insert>
	
	<delete id="delete" parameterType="int">
		DELETE FROM role WHERE id=#{id};
	</delete>
	
	<delete id="deleteBatch" parameterType="collection">
		DELETE FROM role WHERE id in 
		<foreach collection="array" open="(" separator="," item="id" close=")">
			#{id}
		</foreach>
	</delete>

	<update id="update" parameterType="Role">
		UPDATE role
		<set>
			<if test="#{name!=null}">
				name=#{name},
			</if>
		</set>
		WHERE id=#{id}
	</update>


	<update id="batchUpdateWithMap" parameterType="java.util.Map" >
	    UPDATE role SET name = #{name} WHERE id IN
	    <foreach collection="array"  item="id" open="(" separator="," close=")">
	        #{id}
	    </foreach>
	</update>

</mapper>